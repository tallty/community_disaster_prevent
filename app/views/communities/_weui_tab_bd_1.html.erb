<div class="weui_tab_bd">
  <div class="weui_content_communities">

    <div class="weui_navbar header">
      <div class="weui_navbar_item weui_bar_item_on" id="head_Map">
          地图
      </div>
      <div class="weui_navbar_item" id= "head_List">
          列表
      </div>
    </div>

    <div id="map_container"></div>

    <div id="showList" class="row" style="display: none;">
      <% if @disasters.present? != true %>
        <div class="col-xs-12 show_disasters alpha-bg"><h4>当前没有灾情列表！</h4></div>
      <% else %>
        <% @disasters.each do |disaster| %>
          <div class="col-xs-12 show_disasters alpha-bg">
            <div class="row">时间: <%= disaster.occur_time.strftime("%Y-%m-%d %H:%M") %></div>
            <div class="row">类型: <%= disaster.disaster_type %></div>
            <div class="row">说明: <%= truncate(disaster.explain,length: 20) %></div>
            <div class="row">地点: <%= disaster.disaster_position.try(:address) %></div>
          </div>
          <div class="col-xs-12 show_disasters text-center show_disasters_push alpha-bg">
            <div class="col-xs-4">
              <%= link_to "详细信息", disaster_path(disaster) %>
            </div>
            <div class="col-xs-4">
              <%= link_to "撤回灾情", disaster_path(disaster), method: :delete %>
            </div>
            <%#= if disaster.subscriber.id == @subscriber.id %>
            <div class="col-xs-4">
              <%= link_to "上传图片", new_disaster_picture_path(disaster_id: disaster.id) %>
            </div>
            <%#= end %>
          </div>
        <% end %>
      <% end %>
    </div>

    <div class="buttons">
      <a href="<%= new_disaster_position_path %>">
        <i class="iconfont">&#xe600;</i>
        <p>上报</p>
      </a>
      <a href="" onclick="window.location.reload();">
        <i class="iconfont">&#xe60c;</i>
        <p>刷新</p>
      </a>
      <a href="#" id="water_area">
        <%= image_tag "water_area.png", alt: "易积水小区" %>
        <p>小区</p>
      </a>
      <a href="#" id="water_road">
        <%= image_tag "water_road.png", alt: "易积水道路" %>
        <p>道路</p>
      </a>
    </div>

  </div>
</div>

<script type="text/javascript" src=http://api.map.baidu.com/api?v=2.0&ak=8SWaIs2cE83Ssvv90yXPUEQQhnkG368u></script>
<script type="text/javascript" src="http://3gimg.qq.com/lightmap/components/geolocation/geolocation.min.js"></script>
<% content_for :scripts do %>
  
  <%= javascript_tag do %>
    disasters = <%= @disasters.to_json.html_safe %>
  <% end %>

  <script type="text/javascript">
    var areaBtn = $("#water_area");
    var roadBtn = $("#water_road");
    // Navbar 切换逻辑
    // 地图按钮
    $("#head_Map").on("click", function(){
      $("#head_Map").removeClass("weui_bar_item_on");
      $("#head_List").removeClass("weui_bar_item_on");
      $(this).addClass("weui_bar_item_on");
      $("#map_container").show();
      $("#showList").hide();
      areaBtn.show();
      roadBtn.show();
    });
    // 列表按钮
    $("#head_List").on("click", function(){
      $("#head_Map").removeClass("weui_bar_item_on");
      $("#head_List").removeClass("weui_bar_item_on");
      $(this).addClass("weui_bar_item_on");
      $("#map_container").hide();
      $("#showList").show();
      areaBtn.hide();
      roadBtn.hide();
    });

    //屏幕旋转事件监听
    $(window).on('orientationchange', function() {
      window.location.reload();
    });
    
    // ===========百度地图相关=============
    $(document).ready(function() {
      var map = new BMap.Map("map_container");
      
      // 初始化地图，并加载灾情点
      init_data(map);
      // 处理易积水点
      handleWaterPoint(map);
    })

    // ===========百度地图初始化=============
    function init_data(map) {
        var geolocation = new qq.maps.Geolocation("OZBBZ-ZQLC3-MKF3U-3VCU4-DFWO7-AGFPB", "weather_survey")

        // 初始化地图,用城市名设置地图中心点
        map.centerAndZoom("上海",12);      
        map.enableScrollWheelZoom(true);
        //两秒后开启惯性拖拽
        // map.enableInertialDragging();
        // 获取当前定位
        geolocation.getLocation(function(r){
          console.log(r);
          // if(this.getStatus() == BMAP_STATUS_SUCCESS){
            let x_pi=3.14159265358979324;  
            var x = r.lng;
            var y = r.lat;  
            var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);
            var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);
            var bd_lon = z * Math.cos(theta) + 0.0065;
            var bd_lat = z * Math.sin(theta) + 0.00670;
            // 添加自定义位置图标
            var ptt = new BMap.Point(bd_lon, bd_lat);
            let myIcon = new BMap.Icon("<%= image_url "location_circle.png" %>", new BMap.Size(60, 60));
            // 创建标注对象并添加到地图
            var marker = new BMap.Marker(ptt, {icon: myIcon});
            map.addOverlay(marker);
            map.panTo(ptt);
          // }
          // else {
          //   alert('failed'+this.getStatus());
          // }        
        },{enableHighAccuracy: true})
        // 添加灾情图标
        for(var i = 0; i < disasters.length; i++) {
          addmarker(disasters[i],map)
        }
        // 地图未加载时，，重新加载
        if($("#map_container div").length == 0) {
          window.location.reload();
        }
      }

      // 更新灾情点位数据，添加点位标注
      function addmarker(obj, map) {
        var myIcon = new BMap.Icon("../assets/images/water_area.png", new BMap.Size(30,35));
        var lanlat = new BMap.Point(obj.disaster_position.lon, obj.disaster_position.lat);
        var sContent ="<div class='text-center'>"+
                "<div>时间:"+obj.occur_time+"</div>"+
                "<div style='word-break:break-all;width:200px;'>说明:"+obj.explain+"</div>"+
                "<div>"+"<a style='color:red;' href='/disasters/"+obj.id+"'>详细说明</a>"+"</div>"+
                "<img id='imgDemo' style='text-align:center;height:100px;width:100px;' src='"+obj.pictures[0].url+"'/>"+"</div>";
        console.log(obj.pictures[0].url);
        var marker;
        var infoWindow
        // 使用不同的灾情图标
        if(obj.disaster_position == null){ return; }
        if(obj.type=="暴雨"){
          var icon = new BMap.Icon("../assets/images/rain_icon.png", new BMap.Size(30,35));
        }else if(obj.type=="雷电"){
          var icon = new BMap.Icon("../assets/images/thunder_icon.png", new BMap.Size(30,35));
        }else if(obj.type=="大风"){
          var icon = new BMap.Icon("../assets/images/win_icon.png", new BMap.Size(30,35));
        }else{
          var icon = new BMap.Icon("../assets/images/other_icon.png", new BMap.Size(30,35));
        }
        // 添加标注点
        marker = new BMap.Marker(lanlat,{icon:icon});
        // 创建信息窗口对象
        infoWindow = new BMap.InfoWindow(sContent);
        // 打点
        map.addOverlay(marker);
        marker.addEventListener("click", function(){         
           this.openInfoWindow(infoWindow);
           // 图片加载完毕重绘infowindow
           document.getElementById('imgDemo').onload = function (){
             // 防止在网速较慢，图片未加载时，生成的信息框高度比图片的总高度小，导致图片部分被隐藏
             infoWindow.redraw();
           }
        });
      }

      // 处理易积水点
      function handleWaterPoint(map) {
        var areaBtn = $("#water_area");
        var roadBtn = $("#water_road");
        var show_water_area = false;
        var show_water_road = false;

        // 处理易积水小区按钮点击事件
        handleAreaToggle(show_water_area, areaBtn, map);
        // 处理易积水道路按钮点击事件
        handleRoadToggle(show_water_road, roadBtn, map);

      }
      
      // 处理易积水小区按钮点击事件
      function handleAreaToggle(show_water_area, areaBtn, map) {
        // 添加LBS云中的易积水小区数据
        var areaPoints;
        areaBtn.click(function(){
          if(show_water_area) {
            show_water_area = false;
            areaBtn.removeClass("active");
            map.removeTileLayer(areaPoints);
          } else {
            show_water_area = true;
            areaBtn.addClass("active");
            areaPoints = new BMap.CustomLayer({ geotableId: 151586 })
            map.addTileLayer(areaPoints);
          }
        })
      }

      // 处理易积水道路按钮点击事件
      function handleRoadToggle(show_water_road, roadBtn, map) {
        // 获取LBS云中的易积水道路数据
        var roadPoints;
        roadBtn.click(function(){
          if(show_water_road) {
            show_water_road = false;
            roadBtn.removeClass("active");
            map.removeTileLayer(roadPoints);
          } else {
            show_water_road = true;
            roadBtn.addClass("active");
            roadPoints = new BMap.CustomLayer({ geotableId: 151627 })
            map.addTileLayer(roadPoints);
          }
        })
      }
  </script>
<% end %>
